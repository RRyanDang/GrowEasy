{"ast":null,"code":"// Simple storage utility using localStorage\n\nclass StorageService {\n  constructor() {\n    this.PLANTS_KEY = 'growEasy_plants';\n    this.ZONES_KEY = 'growEasy_zones';\n  }\n  // Plants storage\n  getPlants() {\n    try {\n      const stored = localStorage.getItem(this.PLANTS_KEY);\n      return stored ? JSON.parse(stored) : [];\n    } catch (error) {\n      console.error('Error loading plants from storage:', error);\n      return [];\n    }\n  }\n  savePlants(plants) {\n    try {\n      localStorage.setItem(this.PLANTS_KEY, JSON.stringify(plants));\n    } catch (error) {\n      console.error('Error saving plants to storage:', error);\n    }\n  }\n\n  // Zones storage\n  getZones() {\n    try {\n      const stored = localStorage.getItem(this.ZONES_KEY);\n      return stored ? JSON.parse(stored) : [];\n    } catch (error) {\n      console.error('Error loading zones from storage:', error);\n      return [];\n    }\n  }\n  saveZones(zones) {\n    try {\n      localStorage.setItem(this.ZONES_KEY, JSON.stringify(zones));\n    } catch (error) {\n      console.error('Error saving zones to storage:', error);\n    }\n  }\n\n  // Clear all data\n  clearAll() {\n    localStorage.removeItem(this.PLANTS_KEY);\n    localStorage.removeItem(this.ZONES_KEY);\n  }\n}\nexport const storageService = new StorageService();","map":{"version":3,"names":["StorageService","constructor","PLANTS_KEY","ZONES_KEY","getPlants","stored","localStorage","getItem","JSON","parse","error","console","savePlants","plants","setItem","stringify","getZones","saveZones","zones","clearAll","removeItem","storageService"],"sources":["C:/Hackathon/GrowEasy/src/utils/storage.ts"],"sourcesContent":["// Simple storage utility using localStorage\r\n\r\nexport interface Plant {\r\n  id: string;\r\n  name: string;\r\n  type: string;\r\n  plantedDate: string;\r\n  lastWatered: string;\r\n  health: 'excellent' | 'good' | 'fair' | 'poor';\r\n  image?: string;\r\n  plantingArea?: string;\r\n}\r\n\r\nexport interface Zone {\r\n  id: string;\r\n  name: string;\r\n  size: string;\r\n  sunlight: 'full' | 'partial' | 'shade';\r\n  soilType: string;\r\n  plants: string[];\r\n  image?: string;\r\n  analysis?: any;\r\n}\r\n\r\nclass StorageService {\r\n  private readonly PLANTS_KEY = 'growEasy_plants';\r\n  private readonly ZONES_KEY = 'growEasy_zones';\r\n\r\n  // Plants storage\r\n  getPlants(): Plant[] {\r\n    try {\r\n      const stored = localStorage.getItem(this.PLANTS_KEY);\r\n      return stored ? JSON.parse(stored) : [];\r\n    } catch (error) {\r\n      console.error('Error loading plants from storage:', error);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  savePlants(plants: Plant[]): void {\r\n    try {\r\n      localStorage.setItem(this.PLANTS_KEY, JSON.stringify(plants));\r\n    } catch (error) {\r\n      console.error('Error saving plants to storage:', error);\r\n    }\r\n  }\r\n\r\n  // Zones storage\r\n  getZones(): Zone[] {\r\n    try {\r\n      const stored = localStorage.getItem(this.ZONES_KEY);\r\n      return stored ? JSON.parse(stored) : [];\r\n    } catch (error) {\r\n      console.error('Error loading zones from storage:', error);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  saveZones(zones: Zone[]): void {\r\n    try {\r\n      localStorage.setItem(this.ZONES_KEY, JSON.stringify(zones));\r\n    } catch (error) {\r\n      console.error('Error saving zones to storage:', error);\r\n    }\r\n  }\r\n\r\n  // Clear all data\r\n  clearAll(): void {\r\n    localStorage.removeItem(this.PLANTS_KEY);\r\n    localStorage.removeItem(this.ZONES_KEY);\r\n  }\r\n}\r\n\r\nexport const storageService = new StorageService(); "],"mappings":"AAAA;;AAwBA,MAAMA,cAAc,CAAC;EAAAC,YAAA;IAAA,KACFC,UAAU,GAAG,iBAAiB;IAAA,KAC9BC,SAAS,GAAG,gBAAgB;EAAA;EAE7C;EACAC,SAASA,CAAA,EAAY;IACnB,IAAI;MACF,MAAMC,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,IAAI,CAACL,UAAU,CAAC;MACpD,OAAOG,MAAM,GAAGG,IAAI,CAACC,KAAK,CAACJ,MAAM,CAAC,GAAG,EAAE;IACzC,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;MAC1D,OAAO,EAAE;IACX;EACF;EAEAE,UAAUA,CAACC,MAAe,EAAQ;IAChC,IAAI;MACFP,YAAY,CAACQ,OAAO,CAAC,IAAI,CAACZ,UAAU,EAAEM,IAAI,CAACO,SAAS,CAACF,MAAM,CAAC,CAAC;IAC/D,CAAC,CAAC,OAAOH,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACzD;EACF;;EAEA;EACAM,QAAQA,CAAA,EAAW;IACjB,IAAI;MACF,MAAMX,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,IAAI,CAACJ,SAAS,CAAC;MACnD,OAAOE,MAAM,GAAGG,IAAI,CAACC,KAAK,CAACJ,MAAM,CAAC,GAAG,EAAE;IACzC,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;MACzD,OAAO,EAAE;IACX;EACF;EAEAO,SAASA,CAACC,KAAa,EAAQ;IAC7B,IAAI;MACFZ,YAAY,CAACQ,OAAO,CAAC,IAAI,CAACX,SAAS,EAAEK,IAAI,CAACO,SAAS,CAACG,KAAK,CAAC,CAAC;IAC7D,CAAC,CAAC,OAAOR,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACxD;EACF;;EAEA;EACAS,QAAQA,CAAA,EAAS;IACfb,YAAY,CAACc,UAAU,CAAC,IAAI,CAAClB,UAAU,CAAC;IACxCI,YAAY,CAACc,UAAU,CAAC,IAAI,CAACjB,SAAS,CAAC;EACzC;AACF;AAEA,OAAO,MAAMkB,cAAc,GAAG,IAAIrB,cAAc,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}