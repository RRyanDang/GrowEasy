{"ast":null,"code":"const API_BASE_URL = 'http://localhost:5000';\nclass PlantDictionaryService {\n  async searchPlants(query) {\n    try {\n      const response = await fetch(`${API_BASE_URL}/plant-search?q=${encodeURIComponent(query)}`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('Error searching plants:', error);\n      throw error;\n    }\n  }\n}\nexport const plantDictionaryService = new PlantDictionaryService();","map":{"version":3,"names":["API_BASE_URL","PlantDictionaryService","searchPlants","query","response","fetch","encodeURIComponent","ok","Error","status","data","json","error","console","plantDictionaryService"],"sources":["C:/Hackathon/GrowEasy/src/services/plantDictionaryService.ts"],"sourcesContent":["const API_BASE_URL = 'http://localhost:5000';\r\n\r\nexport interface PlantInfo {\r\n  id: number;\r\n  common_name: string;\r\n  scientific_name: string;\r\n  family: string;\r\n  genus: string;\r\n  year: number;\r\n  image_url: string;\r\n  description: string;\r\n  care_tips: string[];\r\n  sunlight: 'full' | 'partial' | 'shade';\r\n  water_needs: 'low' | 'medium' | 'high';\r\n  difficulty: 'easy' | 'medium' | 'hard';\r\n  growing_season: string;\r\n}\r\n\r\nexport interface PlantSearchResponse {\r\n  query: string;\r\n  results: PlantInfo[];\r\n  total: number;\r\n}\r\n\r\nclass PlantDictionaryService {\r\n  async searchPlants(query: string): Promise<PlantSearchResponse> {\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/plant-search?q=${encodeURIComponent(query)}`);\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      \r\n      const data = await response.json();\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Error searching plants:', error);\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\nexport const plantDictionaryService = new PlantDictionaryService(); "],"mappings":"AAAA,MAAMA,YAAY,GAAG,uBAAuB;AAwB5C,MAAMC,sBAAsB,CAAC;EAC3B,MAAMC,YAAYA,CAACC,KAAa,EAAgC;IAC9D,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,YAAY,mBAAmBM,kBAAkB,CAACH,KAAK,CAAC,EAAE,CAAC;MAE3F,IAAI,CAACC,QAAQ,CAACG,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBJ,QAAQ,CAACK,MAAM,EAAE,CAAC;MAC3D;MAEA,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;MAClC,OAAOD,IAAI;IACb,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C,MAAMA,KAAK;IACb;EACF;AACF;AAEA,OAAO,MAAME,sBAAsB,GAAG,IAAIb,sBAAsB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}